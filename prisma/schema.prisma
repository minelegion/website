generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  realname   String
  password   String
  ip         String?
  lastlogin  BigInt?
  x          Float     @default(0)
  y          Float     @default(0)
  z          Float     @default(0)
  world      String    @default("world")
  regdate    BigInt    @default(0)
  regip      String?
  yaw        Float?
  pitch      Float?
  email      String?
  isLogged   Int       @default(0)
  hasSession Int       @default(0)
  totp       String?
  discord    Discord?
  skinCopy   SkinCopy?
  skin       Skin?

  @@map("authme")
}

model Discord {
  id       String  @id
  username String
  avatar   String?
  user     User    @relation(references: [id], fields: [userId])
  userId   Int

  @@map(name: "discord_users")
}

model SkinCopy {
  username String @id @map("Nick")
  skin     String @map("Skin")
  user     User?  @relation(fields: [username], references: [username])

  @@map("players")
}

model Skin {
  username  String  @id @map("Nick")
  value     String? @map("Value") @db.Text
  signature String? @map("Signature") @db.Text
  timestamp String? @db.Text
  user      User?   @relation(fields: [username], references: [username])

  @@map("skins")
}

model LuckpermsAction {
  id         Int    @id @default(autoincrement())
  time       BigInt
  actor_uuid String
  actor_name String
  type       String
  acted_uuid String
  acted_name String
  action     String

  @@map("luckperms_actions")
}

model GroupPermission {
  id         Int     @id @default(autoincrement())
  name       String
  permission String
  value      Boolean
  server     String
  world      String
  expiry     BigInt
  contexts   String
  group      Group   @relation(references: [name], fields: [name])

  @@index([name], name: "luckperms_group_permissions_name")
  @@map("luckperms_group_permissions")
}

model Group {
  name        String            @id
  permissions GroupPermission[]

  @@map("luckperms_groups")
}

model LuckpermsMessenger {
  id   Int      @id @default(autoincrement())
  time DateTime @default(now()) @db.Timestamp(0)
  msg  String   @db.Text

  @@map("luckperms_messenger")
}

model LuckpermsPlayer {
  uuid          String             @id
  username      String
  primary_group String
  permissions   PlayerPermission[]

  @@index([username], name: "luckperms_players_username")
  @@map("luckperms_players")
}

model Tracks {
  name   String @id
  groups String

  @@map("luckperms_tracks")
}

model PlayerPermission {
  id         Int             @id @default(autoincrement())
  uuid       String
  permission String
  value      Boolean
  server     String
  world      String
  expiry     BigInt
  contexts   String
  player     LuckpermsPlayer @relation(fields: [uuid], references: [uuid])

  @@index([uuid], name: "luckperms_user_permissions_uuid")
  @@map("luckperms_user_permissions")
}
