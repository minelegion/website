generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int              @id @default(autoincrement()) @db.UnsignedMediumInt
  username   String           @unique @db.VarChar(255)
  realname   String           @db.VarChar(255)
  password   String           @db.VarChar(255)
  ip         String?          @db.VarChar(40)
  lastlogin  BigInt?
  x          Float            @default(0)
  y          Float            @default(0)
  z          Float            @default(0)
  world      String           @default("world") @db.VarChar(255)
  regdate    BigInt           @default(0)
  regip      String?          @db.VarChar(40)
  yaw        Float?           @db.Float
  pitch      Float?           @db.Float
  email      String?          @db.VarChar(255)
  isLogged   Int              @default(0) @db.SmallInt
  hasSession Int              @default(0) @db.SmallInt
  totp       String?          @db.VarChar(32)
  discord    Discord?
  skinCopy   SkinCopy?
  skin       Skin?
  lp         LuckpermsPlayer?

  @@map("authme")
}

model Discord {
  id       String @id
  username String
  avatar   String
  user     User   @relation(references: [id], fields: [userId])
  userId   Int    @db.UnsignedMediumInt

  @@map(name: "discord_users")
}

model SkinCopy {
  username String @id @map("Nick") @db.VarChar(255)
  skin     String @map("Skin") @db.VarChar(16)
  user     User?  @relation(fields: [username], references: [username])

  @@map("players")
}

model Skin {
  username  String  @id @map("Nick") @db.VarChar(255)
  value     String? @map("Value") @db.Text
  signature String? @map("Signature") @db.Text
  timestamp String? @db.Text
  user      User?   @relation(fields: [username], references: [username])

  @@map("skins")
}

model LuckpermsAction {
  id         Int    @id @default(autoincrement())
  time       BigInt
  actor_uuid String @db.VarChar(36)
  actor_name String @db.VarChar(100)
  type       String @db.Char(1)
  acted_uuid String @db.VarChar(36)
  acted_name String @db.VarChar(36)
  action     String @db.VarChar(300)

  @@map("luckperms_actions")
}

model GroupPermission {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(36)
  permission String  @db.VarChar(200)
  value      Boolean
  server     String  @db.VarChar(36)
  world      String  @db.VarChar(64)
  expiry     BigInt
  contexts   String  @db.VarChar(200)
  group      Group   @relation(references: [name], fields: [name])

  @@index([name], name: "luckperms_group_permissions_name")
  @@map("luckperms_group_permissions")
}

model Group {
  name        String            @id @db.VarChar(36)
  permissions GroupPermission[]

  @@map("luckperms_groups")
}

model LuckpermsMessenger {
  id   Int      @id @default(autoincrement())
  time DateTime @default(now()) @db.Timestamp(0)
  msg  String   @db.Text

  @@map("luckperms_messenger")
}

model LuckpermsPlayer {
  uuid          String             @id @db.VarChar(36)
  username      String             @db.VarChar(255)
  primary_group String             @db.VarChar(36)
  permissions   PlayerPermission[]

  User User @relation(fields: [username], references: [username])

  @@index([username], name: "luckperms_players_username")
  @@map("luckperms_players")
}

model Tracks {
  name   String @id @db.VarChar(36)
  groups String @db.Text

  @@map("luckperms_tracks")
}

model PlayerPermission {
  id         Int             @id @default(autoincrement())
  uuid       String          @db.VarChar(36)
  permission String          @db.VarChar(200)
  value      Boolean
  server     String          @db.VarChar(36)
  world      String          @db.VarChar(64)
  expiry     BigInt
  contexts   String          @db.VarChar(200)
  player     LuckpermsPlayer @relation(fields: [uuid], references: [uuid])

  @@index([uuid], name: "luckperms_user_permissions_uuid")
  @@map("luckperms_user_permissions")
}
